class EventTypes:
    # EVENTS TYPES
    SV_CLOSE = 1 
    """Can be sent by the client to terminate a connection, allowing the server to release resources. Resources will be released in any case, if the server loses the connection to the client."""
    SV_ABORT = 2    
    """Sent by the client to abort commands the server is currently running. Receiving an SV_ABORT packet is equivalent to typing ^C at the server keyboard."""
    SV_CMD = 3    
    """Sent by the client to place the commands from the data string following the header onto the server command queue."""
    SV_CMD_WITH_RETURN = 4   
    """As SV_CMD, but the output generated by the command will be returned to the client in an SV_REPLY packet.""" 
    SV_RETURN = 5 # Not yet used 
    """Not currently used."""
    SV_REGISTER = 6    
    """Sent by the client to register a property on which to receive events."""
    SV_UNREGISTER = 7    
    """Sent by the client to unregister a property, so that events will no longer be sent."""
    SV_EVENT = 8 # From Server 
    """Asynchronous packet sent by the server to clients registered for a property when the property value changes. The packet is also sent when the property is registered with SV_REGISTER."""
    SV_FUNC = 9    
    """Sent by the client to put a single function (or command) on the server command queue. The data following the header contains the function (or command) name and any arguments, separated by null bytes. The server will add parentheses, commas or space characters, as needed, depending on whether the first item is a function or a command."""
    SV_FUNC_WITH_RETURN = 10   
    """As SV_FUNC, but the result of the function will be returned to the client in an SV_REPLY packet."""
    SV_CHAN_READ = 11   
    """Sent by the client to get the value of a property."""
    SV_CHAN_SEND = 12   
    """Sent by the client to set the value of a property."""
    SV_REPLY = 13 # From Server 
    """Sent by the server with the result of a command."""
    SV_HELLO = 14   
    """Sent by the client to check if the desired server is listening on a particular port. The client should then look for the expected SV_HELLO_REPLY response. The spec client puts a short message in the property name field for debugging purposes, which the server otherwise ignores."""
    SV_HELLO_REPLY = 15 # From Server 
    """Sent by the server in response to an SV_HELLO packet. The data section of the reply contains the name of the spec process by which the server was invoked. That name is used by clients to find servers specified by spec process name."""
